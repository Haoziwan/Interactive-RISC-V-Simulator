# 冒泡排序程序
# 对内存中的5个数字进行排序
# 初始数据在内存地址0-16中

# 外层循环 i 从 4 到 1
addi x1, x0, 4      # i = 4

loop_i:
beq x1, x0, end     # if i == 0, 结束排序
addi x2, x0, 0      # j = 0

# 内层循环 j 从 0 到 i-1
loop_j:
beq x2, x1, next_i  # if j == i, 进入下一轮外层循环

# 加载相邻元素
sll x3, x2, x0      # x3 = j * 4
lw x4, 0(x3)        # 加载 arr[j]
lw x5, 4(x3)        # 加载 arr[j+1]

# 比较并交换
bge x4, x5, swap    # if arr[j] > arr[j+1], 交换
beq x0, x0, next_j  # 否则继续循环

swap:
sw x5, 0(x3)        # arr[j] = arr[j+1]
sw x4, 4(x3)        # arr[j+1] = arr[j]

next_j:
addi x2, x2, 1      # j++
beq x0, x0, loop_j

next_i:
addi x1, x1, -1     # i--
beq x0, x0, loop_i

end:


# 斐波那契数列程序
# 计算第n个斐波那契数
# n存储在x1中，结果存储在x2中

addi x1, x0, 10     # 计算第10个斐波那契数
addi x2, x0, 1      # f(1) = 1
addi x3, x0, 1      # f(2) = 1
addi x4, x0, 2      # i = 2

fib_loop:
beq x4, x1, fib_end # if i == n, 结束计算
add x5, x2, x3      # next = f(i-1) + f(i-2)
add x2, x3, x0      # f(i-1) = f(i)
add x3, x5, x0      # f(i) = next
addi x4, x4, 1      # i++
beq x0, x0, fib_loop

fib_end:


# GCD程序
# 计算两个数的最大公约数
# 输入：x1 = a, x2 = b
# 输出：x1 = gcd(a,b)

addi x1, x0, 48     # a = 48
addi x2, x0, 36     # b = 36

gcd_loop:
beq x2, x0, gcd_end # if b == 0, 结束计算
add x3, x2, x0      # temp = b

# 使用减法实现除法运算
sub_loop:
blt x1, x2, sub_end # if a < b, 结束减法
sub x1, x1, x2      # a = a - b
beq x0, x0, sub_loop # 继续减法

sub_end:
add x2, x1, x0      # b = a (余数)
add x1, x3, x0      # a = temp
beq x0, x0, gcd_loop # 继续GCD循环

gcd_end: